name: BNB Bible Bot

on:
  schedule:
    # Run at 8:00 AM UTC daily (morning routine)
    - cron: '0 8 * * *'
    # Run at 10:00 AM UTC (BNB insights)
    - cron: '0 10 * * *'
    # Run at 2:00 PM UTC (BNB insights)
    - cron: '0 14 * * *'
    # Run at 6:00 PM UTC (BNB insights)
    - cron: '0 18 * * *'
    # Run at 12:00 PM UTC (interactions)
    - cron: '0 12 * * *'
    # Run at 4:00 PM UTC (interactions)
    - cron: '0 16 * * *'
    # Run at 8:00 PM UTC (interactions)
    - cron: '0 20 * * *'
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      action:
        description: 'What to run'
        required: true
        default: 'morning'
        type: choice
        options:
        - morning
        - insights
        - interactions
        - full

jobs:
  run-bot:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Ollama
      run: |
        curl -fsSL https://ollama.ai/install.sh | sh
        ollama pull llama3
        
    - name: Run BNB Morning Routine
      if: github.event_name == 'schedule' && github.event.schedule == '0 8 * * *'
      env:
        X_API_KEY: ${{ secrets.X_API_KEY }}
        X_API_SECRET: ${{ secrets.X_API_SECRET }}
        X_ACCESS_TOKEN: ${{ secrets.X_ACCESS_TOKEN }}
        X_ACCESS_TOKEN_SECRET: ${{ secrets.X_ACCESS_TOKEN_SECRET }}
        X_CLIENT_ID: ${{ secrets.X_CLIENT_ID }}
        X_CLIENT_SECRET: ${{ secrets.X_CLIENT_SECRET }}
        BOT_USERNAME: ${{ secrets.BOT_USERNAME }}
        POSTING_TIME: ${{ secrets.POSTING_TIME }}
        MAX_INTERACTIONS_PER_DAY: ${{ secrets.MAX_INTERACTIONS_PER_DAY }}
        BSCSCAN_API_KEY: ${{ secrets.BSCSCAN_API_KEY }}
      run: |
        python scheduler.py
        
    - name: Run BNB Insights
      if: github.event_name == 'schedule' && (github.event.schedule == '0 10 * * *' || github.event.schedule == '0 14 * * *' || github.event.schedule == '0 18 * * *')
      env:
        X_API_KEY: ${{ secrets.X_API_KEY }}
        X_API_SECRET: ${{ secrets.X_API_SECRET }}
        X_ACCESS_TOKEN: ${{ secrets.X_ACCESS_TOKEN }}
        X_ACCESS_TOKEN_SECRET: ${{ secrets.X_ACCESS_TOKEN_SECRET }}
        X_CLIENT_ID: ${{ secrets.X_CLIENT_ID }}
        X_CLIENT_SECRET: ${{ secrets.X_CLIENT_SECRET }}
        BOT_USERNAME: ${{ secrets.BOT_USERNAME }}
        POSTING_TIME: ${{ secrets.POSTING_TIME }}
        MAX_INTERACTIONS_PER_DAY: ${{ secrets.MAX_INTERACTIONS_PER_DAY }}
        BSCSCAN_API_KEY: ${{ secrets.BSCSCAN_API_KEY }}
      run: |
        python -c "
        from bnb_bot import BNBBibleBot
        bot = BNBBibleBot()
        bot.run_bnb_insights()
        "
        
    - name: Run BNB Interactions
      if: github.event_name == 'schedule' && (github.event.schedule == '0 12 * * *' || github.event.schedule == '0 16 * * *' || github.event.schedule == '0 20 * * *')
      env:
        X_API_KEY: ${{ secrets.X_API_KEY }}
        X_API_SECRET: ${{ secrets.X_API_SECRET }}
        X_ACCESS_TOKEN: ${{ secrets.X_ACCESS_TOKEN }}
        X_ACCESS_TOKEN_SECRET: ${{ secrets.X_ACCESS_TOKEN_SECRET }}
        X_CLIENT_ID: ${{ secrets.X_CLIENT_ID }}
        X_CLIENT_SECRET: ${{ secrets.X_CLIENT_SECRET }}
        BOT_USERNAME: ${{ secrets.BOT_USERNAME }}
        POSTING_TIME: ${{ secrets.POSTING_TIME }}
        MAX_INTERACTIONS_PER_DAY: ${{ secrets.MAX_INTERACTIONS_PER_DAY }}
        BSCSCAN_API_KEY: ${{ secrets.BSCSCAN_API_KEY }}
      run: |
        python -c "
        from bnb_bot import BNBBibleBot
        bot = BNBBibleBot()
        bot.run_bnb_interactions()
        "
        
    - name: Run Manual Action
      if: github.event_name == 'workflow_dispatch'
      env:
        X_API_KEY: ${{ secrets.X_API_KEY }}
        X_API_SECRET: ${{ secrets.X_API_SECRET }}
        X_ACCESS_TOKEN: ${{ secrets.X_ACCESS_TOKEN }}
        X_ACCESS_TOKEN_SECRET: ${{ secrets.X_ACCESS_TOKEN_SECRET }}
        X_CLIENT_ID: ${{ secrets.X_CLIENT_ID }}
        X_CLIENT_SECRET: ${{ secrets.X_CLIENT_SECRET }}
        BOT_USERNAME: ${{ secrets.BOT_USERNAME }}
        POSTING_TIME: ${{ secrets.POSTING_TIME }}
        MAX_INTERACTIONS_PER_DAY: ${{ secrets.MAX_INTERACTIONS_PER_DAY }}
        BSCSCAN_API_KEY: ${{ secrets.BSCSCAN_API_KEY }}
      run: |
        if [ "${{ github.event.inputs.action }}" = "morning" ]; then
          python scheduler.py
        elif [ "${{ github.event.inputs.action }}" = "insights" ]; then
          python -c "from bnb_bot import BNBBibleBot; bot = BNBBibleBot(); bot.run_bnb_insights()"
        elif [ "${{ github.event.inputs.action }}" = "interactions" ]; then
          python -c "from bnb_bot import BNBBibleBot; bot = BNBBibleBot(); bot.run_bnb_interactions()"
        elif [ "${{ github.event.inputs.action }}" = "full" ]; then
          python bnb_bot.py
        fi
